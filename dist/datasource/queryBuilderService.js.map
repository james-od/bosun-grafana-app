{"version":3,"sources":["../../src/datasource/queryBuilderService.js"],"names":["QueryBuilderService","finalQuery","_this","values","Array","scope","variableOrder","length","i","variables","id","push","hasOwnProperty","sort","reverse","the_service","substitutedFinalQuery","forEach","value","type","startsWith","undefined","split","join","buildQueryVariable","subbedQuery","parameterObject","console","log","params","constructedQuery","ReferenceError","tagBoxes","onFirstTag","tagMapping"],"mappings":"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","sourcesContent":["export class QueryBuilderService {\n\n  constructor() {\n  }\n\n  substituteFinalQuery(finalQuery, _this) {\n    //Dictionary doesn't guarantee ordering, so convert to array and sort by key\n    var values = new Array();\n    if (_this.scope.variableOrder.length) {\n      for (var i = 0; i < _this.scope.variableOrder.length; i++) {\n        _this.scope.variables[_this.scope.variableOrder[i].id][\"id\"] = _this.scope.variableOrder[i].id\n        values.push(_this.scope.variables[_this.scope.variableOrder[i].id])\n      }\n    } else {\n      for (var id in _this.scope.variables) {\n        if (_this.scope.variables.hasOwnProperty(id)) {\n          _this.scope.variables[id][\"id\"] = id\n          values.push(_this.scope.variables[id])\n        }\n      }\n    }\n    values.sort()\n    //Work upwards\n    values = values.reverse()\n\n    var the_service = this\n\n    var substitutedFinalQuery = finalQuery\n    values.forEach(function (value) {\n      if (value.type == \"variable\") {\n\n        if (value[\"inputName\"] && value[\"inputName\"].startsWith(\"$\")) {\n          if (value[\"inputValue\"] == undefined) {\n            substitutedFinalQuery = substitutedFinalQuery.split(value[\"inputName\"]).join(\"\");\n          } else {\n            substitutedFinalQuery = substitutedFinalQuery.split(value[\"inputName\"]).join(value[\"inputValue\"]);\n          }\n        }\n      }\n      if (value.type == \"queryVariable\") {\n        substitutedFinalQuery = substitutedFinalQuery.split(value.value[\"queryVariableName\"]).join(the_service.buildQueryVariable(value, value.id, _this.scope));\n      }\n    });\n    _this.scope.subbedQuery = substitutedFinalQuery;\n    return substitutedFinalQuery;\n  }\n\n  buildQueryVariable(parameterObject, id, scope) {\n\n    console.log(parameterObject)\n    console.log(id)\n    console.log(scope)\n    var params = parameterObject.value;\n    var constructedQuery = \"\";\n    if(!params){\n      throw new ReferenceError(\"No query parameters found\")\n    }\n    if(params[\"queryFunction\"]){\n      constructedQuery += params[\"queryFunction\"] + '(\"'\n    }else{\n      throw new ReferenceError(\"Query function not set\")\n    }\n    if(params[\"queryAgg\"]){\n      constructedQuery += params[\"queryAgg\"] + \":\"\n    }else{\n      throw new ReferenceError(\"Query aggregator not set\")\n    }\n    if(params[\"downsampleTime\"]){\n      constructedQuery += params[\"downsampleTime\"]\n      if(params[\"downsampleAgg\"]){\n        constructedQuery += \"-\" + params[\"downsampleAgg\"]\n      }\n      if(params[\"fillPolicy\"]){\n        constructedQuery += \"-\" + params[\"fillPolicy\"]\n      }\n    }\n    if(params[\"conversionFlag\"]){\n      constructedQuery += \":\" + params[\"conversionFlag\"]\n    }\n    if(params[\"metric\"]){\n      constructedQuery += \":\" + params[\"metric\"] + \"{\"\n    }else{\n      throw new ReferenceError(\"Query metric not set\")\n    }\n    if(params[\"metricTags\"]){\n      constructedQuery += params[\"metricTags\"]\n    }\n    constructedQuery += \"}\"\n    if(scope.tagBoxes[id]){\n      var onFirstTag = true\n\n      constructedQuery += \"{\"\n      for (var tagMapping in scope.tagBoxes[id]) {\n        if (scope.tagBoxes[id].hasOwnProperty(tagMapping)) {\n          if(!onFirstTag){\n            constructedQuery += \", \"\n          }else{onFirstTag = false;}\n          constructedQuery += scope.tagBoxes[id][tagMapping][\"key\"] + \"=\" + scope.tagBoxes[id][tagMapping][\"value\"]\n        }\n      }\n      constructedQuery += '}\"'\n    }else{\n      constructedQuery += '{}\"'\n    }\n    if(params[\"startDuration\"]){\n      constructedQuery += ', \"' + params[\"startDuration\"] + '\"'\n    }\n    if(params[\"endDuration\"]){\n      constructedQuery += ', \"' + params[\"endDuration\"] + '\"'\n    }\n    if(params[\"duration\"]){\n      constructedQuery += ', \"' + params[\"duration\"] + '\"'\n    }\n    if(params[\"period\"]){\n      constructedQuery += ', \"' + params[\"period\"] + '\"'\n    }\n    if(params[\"num\"]){\n      constructedQuery += ', ' + params[\"num\"]\n    }\n    if(params[\"funcName\"]){\n      constructedQuery += ', \"' + params[\"funcName\"] + '\"'\n    }\n    constructedQuery += \")\";\n    return constructedQuery;\n  }\n}\n"],"file":"queryBuilderService.js"}