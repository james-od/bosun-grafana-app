{"version":3,"sources":["../../src/datasource/queryBuilderService.js"],"names":["QueryBuilderService","variableOrderLength","variables","variableOrder","values","i","id","push","value","startsWith","queryString","matching","replacement","split","join","finalQuery","controller","orderedVariablesList","target","slice","sort","a","b","indexInUI","the_service","substitutedFinalQuery","index","forEach","type","variableIsValid","undefined","substituteVariable","buildQueryVariable","subbedQuery","queryVariable","arg","ReferenceError","prepend","param","append","constructedQuery","tagType","onFirstTag","tagMapping","hasOwnProperty","ensureMinimalQuery","addParamToQuery","grouptagBoxes","addTagsToQuery","filtertagBoxes","queryVar","addQueryArg"],"mappings":"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","sourcesContent":["export class QueryBuilderService {\n\n  buildWithProvidedOrdering(variableOrderLength, variables, variableOrder, values) {\n    for (var i = 0; i < variableOrderLength; i++) {\n      variables[variableOrder[i].id][\"id\"] = variableOrder[i].id;\n      values.push(variables[variableOrder[i].id]);\n    }\n  }\n\n  variableIsValid(value){\n    return value[\"inputName\"] && value[\"inputName\"].startsWith(\"$\")\n  }\n\n  substituteVariable(queryString, matching, replacement){\n    return queryString.split(matching).join(replacement);\n  }\n\n  substituteFinalQuery(finalQuery, controller) {\n    //Ensure ordered and work upwards\n    //Copy to not affect ordering\n    var orderedVariablesList = controller.target.variables.slice();\n\n    orderedVariablesList.sort((a, b) => (a.indexInUI < b.indexInUI) ? 1 : -1);\n\n    const the_service = this;\n\n    var substitutedFinalQuery = finalQuery;\n    var index = 0;\n    orderedVariablesList.forEach(function (value) {\n      if (value.type === \"variable\") {\n        if (the_service.variableIsValid(value)) {\n          if (value[\"inputValue\"] === undefined) {\n            substitutedFinalQuery = the_service.substituteVariable(\n              substitutedFinalQuery,\n              value[\"inputName\"],\n              \"\"\n            );\n          } else {\n            substitutedFinalQuery = the_service.substituteVariable(\n              substitutedFinalQuery,\n              value[\"inputName\"],\n              value[\"inputValue\"]\n            );\n          }\n        }\n      }\n      if (value.type === \"queryVariable\") {\n        substitutedFinalQuery = the_service.substituteVariable(\n          substitutedFinalQuery, value[\"inputValue\"],\n          the_service.buildQueryVariable(orderedVariablesList, value, index, controller)\n        );\n      }\n      index +=1;\n    });\n    controller.target.subbedQuery = substitutedFinalQuery;\n    return substitutedFinalQuery;\n  }\n\n  addQueryArg(queryVariable, arg){\n    if(queryVariable[arg]){\n      if(arg === \"num\"){\n        return ', ' + queryVariable[arg]\n      }else{\n        return ', \"' + queryVariable[arg] + '\"'\n      }\n    }else{\n      return ', \"\"'\n    }\n  }\n\n  ensureMinimalQuery(queryVariable){\n    if(!queryVariable){throw new ReferenceError(\"No query parameters found\")}\n    if(!queryVariable[\"queryFunction\"]){throw new ReferenceError(\"Query function not set\")}\n    if(!queryVariable[\"queryAgg\"]){throw new ReferenceError(\"Query aggregator not set\")}\n    if(!queryVariable[\"metric\"]){throw new ReferenceError(\"Query metric not set\")}\n  }\n\n  addParamToQuery(queryVariable, prepend, param, append){\n    if(queryVariable[param]){\n      return prepend + queryVariable[param] + append;\n    }\n    return \"\";\n  }\n\n  addTagsToQuery(constructedQuery, orderedVariablesList, index, tagType){\n    var onFirstTag = true;\n    for (var tagMapping in orderedVariablesList[index][tagType+\"tagBoxes\"]) {\n      if (orderedVariablesList[index][tagType+\"tagBoxes\"].hasOwnProperty(tagMapping)) {\n        if (!onFirstTag) {\n          constructedQuery += \",\"\n        } else {\n          onFirstTag = false;\n        }\n        constructedQuery +=\n          orderedVariablesList[index][tagType+\"tagBoxes\"][tagMapping][\"key\"]\n          + \"=\"\n          + orderedVariablesList[index][tagType+\"tagBoxes\"][tagMapping][\"value\"]\n      }\n    }\n    return constructedQuery;\n  }\n\n  buildQueryVariable(orderedVariablesList, queryVariable, index) {\n\n    this.ensureMinimalQuery(queryVariable);\n\n    var constructedQuery = queryVariable[\"queryFunction\"] + '(\"' + queryVariable[\"queryAgg\"] + \":\";\n    if(queryVariable[\"downsampleTime\"]){\n      constructedQuery += queryVariable[\"downsampleTime\"];\n      constructedQuery += this.addParamToQuery(queryVariable, \"-\", \"downsampleAgg\", \"\");\n    }else{\n      constructedQuery += this.addParamToQuery(queryVariable, \"\", \"downsampleAgg\", \"\");\n    }\n    constructedQuery += this.addParamToQuery(queryVariable, \"-\", \"fillPolicy\", \"\");\n    constructedQuery += this.addParamToQuery(queryVariable, \":\", \"conversionFlag\", \"\");\n    constructedQuery += this.addParamToQuery(queryVariable, \":\", \"flags\", \"\");\n\n    if(queryVariable[\"downsampleTime\"] || queryVariable[\"downsampleAgg\"] || queryVariable[\"fillPolicy\"]){\n      constructedQuery += \":\"\n    }\n    constructedQuery += queryVariable[\"metric\"] + \"{\";\n\n    if(orderedVariablesList[index] && orderedVariablesList[index].grouptagBoxes) {\n      constructedQuery = this.addTagsToQuery(constructedQuery, orderedVariablesList, index, 'group')\n    }\n    constructedQuery += \"}{\";\n    if(orderedVariablesList[index] && orderedVariablesList[index].filtertagBoxes){\n      constructedQuery = this.addTagsToQuery(constructedQuery, orderedVariablesList, index, 'filter');\n    }\n    constructedQuery += '}\"'\n\n    const queryVar = queryVariable[\"queryFunction\"]\n    if(queryVar === \"q\" || queryVar === \"change\" || queryVar === \"count\") {\n      constructedQuery += this.addQueryArg(queryVariable, \"startDuration\");\n      constructedQuery += this.addQueryArg(queryVariable, \"endDuration\");\n    }\n    if(queryVar === \"band\" || queryVar === \"over\" || queryVar === \"shiftBand\") {\n      constructedQuery += this.addQueryArg(queryVariable, \"duration\");\n      constructedQuery += this.addQueryArg(queryVariable, \"period\");\n      constructedQuery += this.addQueryArg(queryVariable, \"num\");\n    }\n    if(queryVar === \"window\") {\n      constructedQuery += this.addQueryArg(queryVariable, \"duration\");\n      constructedQuery += this.addQueryArg(queryVariable, \"period\");\n      constructedQuery += this.addQueryArg(queryVariable, \"num\");\n      constructedQuery += this.addQueryArg(queryVariable, \"funcName\");\n    }\n    constructedQuery += \")\";\n    return constructedQuery;\n  }\n}\n"],"file":"queryBuilderService.js"}