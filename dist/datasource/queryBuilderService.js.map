{"version":3,"sources":["../../src/datasource/queryBuilderService.js"],"names":["QueryBuilderService","variableOrderLength","variables","variableOrder","values","i","id","push","value","startsWith","queryString","matching","replacement","split","join","finalQuery","controller","console","log","orderedVariablesList","target","slice","sort","a","b","indexInUI","the_service","substitutedFinalQuery","index","forEach","type","variableIsValid","undefined","substituteVariable","buildQueryVariable","subbedQuery","queryVariable","arg","constructedQuery","ReferenceError","grouptagBoxes","onFirstTag","tagMapping","hasOwnProperty","filtertagBoxes","queryVar","addQueryArg"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAAaA,mB;;;;;;;oDAEeC,mB,EAAqBC,S,EAAWC,a,EAAeC,M,EAAQ;AAC/E,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,mBAApB,EAAyCI,CAAC,EAA1C,EAA8C;AAC5CH,cAAAA,SAAS,CAACC,aAAa,CAACE,CAAD,CAAb,CAAiBC,EAAlB,CAAT,CAA+B,IAA/B,IAAuCH,aAAa,CAACE,CAAD,CAAb,CAAiBC,EAAxD;AACAF,cAAAA,MAAM,CAACG,IAAP,CAAYL,SAAS,CAACC,aAAa,CAACE,CAAD,CAAb,CAAiBC,EAAlB,CAArB;AACD;AACF;;;0CAEeE,K,EAAM;AACpB,mBAAOA,KAAK,CAAC,WAAD,CAAL,IAAsBA,KAAK,CAAC,WAAD,CAAL,CAAmBC,UAAnB,CAA8B,GAA9B,CAA7B;AACD;;;6CAEkBC,W,EAAaC,Q,EAAUC,W,EAAY;AACpD,mBAAOF,WAAW,CAACG,KAAZ,CAAkBF,QAAlB,EAA4BG,IAA5B,CAAiCF,WAAjC,CAAP;AACD;;;+CAEoBG,U,EAAYC,U,EAAY;AAC3CC,YAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAD2C,CAE3C;AACA;;AACA,gBAAIG,oBAAoB,GAAGH,UAAU,CAACI,MAAX,CAAkBlB,SAAlB,CAA4BmB,KAA5B,EAA3B;AAEAF,YAAAA,oBAAoB,CAACG,IAArB,CAA0B,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,SAAF,GAAcD,CAAC,CAACC,SAAjB,GAA8B,CAA9B,GAAkC,CAAC,CAA7C;AAAA,aAA1B;AAEA,gBAAMC,WAAW,GAAG,IAApB;AAEA,gBAAIC,qBAAqB,GAAGZ,UAA5B;AACA,gBAAIa,KAAK,GAAG,CAAZ;AACAT,YAAAA,oBAAoB,CAACU,OAArB,CAA6B,UAAUrB,KAAV,EAAiB;AAC5C,kBAAIA,KAAK,CAACsB,IAAN,KAAe,UAAnB,EAA+B;AAC7B,oBAAIJ,WAAW,CAACK,eAAZ,CAA4BvB,KAA5B,CAAJ,EAAwC;AACtC,sBAAIA,KAAK,CAAC,YAAD,CAAL,KAAwBwB,SAA5B,EAAuC;AACrCL,oBAAAA,qBAAqB,GAAGD,WAAW,CAACO,kBAAZ,CAA+BN,qBAA/B,EAAsDnB,KAAK,CAAC,WAAD,CAA3D,EAA0E,EAA1E,CAAxB;AACD,mBAFD,MAEO;AACLmB,oBAAAA,qBAAqB,GAAGD,WAAW,CAACO,kBAAZ,CAA+BN,qBAA/B,EAAsDnB,KAAK,CAAC,WAAD,CAA3D,EAA0EA,KAAK,CAAC,YAAD,CAA/E,CAAxB;AACD;AACF;AACF;;AACD,kBAAIA,KAAK,CAACsB,IAAN,KAAe,eAAnB,EAAoC;AAClCH,gBAAAA,qBAAqB,GAAGD,WAAW,CAACO,kBAAZ,CAA+BN,qBAA/B,EAAsDnB,KAAK,CAAC,YAAD,CAA3D,EAA2EkB,WAAW,CAACQ,kBAAZ,CAA+Bf,oBAA/B,EAAqDX,KAArD,EAA4DoB,KAA5D,EAAmEZ,UAAnE,CAA3E,CAAxB;AACD;;AACDY,cAAAA,KAAK,IAAG,CAAR;AACD,aAdD;AAeAZ,YAAAA,UAAU,CAACI,MAAX,CAAkBe,WAAlB,GAAgCR,qBAAhC;AACA,mBAAOA,qBAAP;AACD;;;sCAEWS,a,EAAeC,G,EAAI;AAC7B,gBAAGD,aAAa,CAACC,GAAD,CAAhB,EAAsB;AACpB,kBAAGA,GAAG,KAAK,KAAX,EAAiB;AACf,uBAAO,OAAOD,aAAa,CAACC,GAAD,CAA3B;AACD,eAFD,MAEK;AACH,uBAAO,QAAQD,aAAa,CAACC,GAAD,CAArB,GAA6B,GAApC;AACD;AACF,aAND,MAMK;AACH,qBAAO,MAAP;AACD;AACF;;;6CAEkBlB,oB,EAAsBiB,a,EAAeR,K,EAAOZ,U,EAAY;AACzEC,YAAAA,OAAO,CAACC,GAAR,CAAYkB,aAAZ;AAEA,gBAAIE,gBAAgB,GAAG,EAAvB;;AACA,gBAAG,CAACF,aAAJ,EAAkB;AAAC,oBAAM,IAAIG,cAAJ,CAAmB,2BAAnB,CAAN;AAAsD;;AACzE,gBAAG,CAACH,aAAa,CAAC,eAAD,CAAjB,EAAmC;AAAC,oBAAM,IAAIG,cAAJ,CAAmB,wBAAnB,CAAN;AAAmD;;AACvF,gBAAG,CAACH,aAAa,CAAC,UAAD,CAAjB,EAA8B;AAAC,oBAAM,IAAIG,cAAJ,CAAmB,0BAAnB,CAAN;AAAqD;;AACpF,gBAAG,CAACH,aAAa,CAAC,QAAD,CAAjB,EAA4B;AAAC,oBAAM,IAAIG,cAAJ,CAAmB,sBAAnB,CAAN;AAAiD;;AAE9ED,YAAAA,gBAAgB,IAAIF,aAAa,CAAC,eAAD,CAAb,GAAiC,IAArD;AACAE,YAAAA,gBAAgB,IAAIF,aAAa,CAAC,UAAD,CAAb,GAA4B,GAAhD;;AACA,gBAAGA,aAAa,CAAC,gBAAD,CAAhB,EAAmC;AACjCE,cAAAA,gBAAgB,IAAIF,aAAa,CAAC,gBAAD,CAAjC;;AACA,kBAAGA,aAAa,CAAC,eAAD,CAAhB,EAAkC;AAChCE,gBAAAA,gBAAgB,IAAI,MAAMF,aAAa,CAAC,eAAD,CAAvC;AACD;;AACD,kBAAGA,aAAa,CAAC,YAAD,CAAhB,EAA+B;AAC7BE,gBAAAA,gBAAgB,IAAI,MAAMF,aAAa,CAAC,YAAD,CAAvC;AACD;AACF,aARD,MAQK;AACH,kBAAGA,aAAa,CAAC,eAAD,CAAhB,EAAkC;AAChCE,gBAAAA,gBAAgB,IAAIF,aAAa,CAAC,eAAD,CAAjC;AACD;;AACD,kBAAGA,aAAa,CAAC,YAAD,CAAhB,EAA+B;AAC7BE,gBAAAA,gBAAgB,IAAI,MAAMF,aAAa,CAAC,YAAD,CAAvC;AACD;AACF;;AACD,gBAAGA,aAAa,CAAC,gBAAD,CAAhB,EAAmC;AACjCE,cAAAA,gBAAgB,IAAI,MAAMF,aAAa,CAAC,gBAAD,CAAvC;AACD;;AACD,gBAAGA,aAAa,CAAC,OAAD,CAAhB,EAA0B;AACxBE,cAAAA,gBAAgB,IAAI,MAAMF,aAAa,CAAC,OAAD,CAAvC;AACD;;AACD,gBAAGA,aAAa,CAAC,gBAAD,CAAb,IAAmCA,aAAa,CAAC,eAAD,CAAhD,IAAqEA,aAAa,CAAC,YAAD,CAArF,EAAoG;AAClGE,cAAAA,gBAAgB,IAAI,GAApB;AACD;;AACDA,YAAAA,gBAAgB,IAAIF,aAAa,CAAC,QAAD,CAAb,GAA0B,GAA9C;;AACA,gBAAGjB,oBAAoB,CAACS,KAAD,CAApB,IAA+BT,oBAAoB,CAACS,KAAD,CAApB,CAA4BY,aAA9D,EAA6E;AAC3E,kBAAIC,UAAU,GAAG,IAAjB;;AACA,mBAAK,IAAIC,UAAT,IAAuBvB,oBAAoB,CAACS,KAAD,CAApB,CAA4BY,aAAnD,EAAkE;AAChE,oBAAIrB,oBAAoB,CAACS,KAAD,CAApB,CAA4BY,aAA5B,CAA0CG,cAA1C,CAAyDD,UAAzD,CAAJ,EAA0E;AACxE,sBAAI,CAACD,UAAL,EAAiB;AACfH,oBAAAA,gBAAgB,IAAI,GAApB;AACD,mBAFD,MAEO;AACLG,oBAAAA,UAAU,GAAG,KAAb;AACD;;AACDH,kBAAAA,gBAAgB,IAAInB,oBAAoB,CAACS,KAAD,CAApB,CAA4BY,aAA5B,CAA0CE,UAA1C,EAAsD,KAAtD,IAA+D,GAA/D,GAAqEvB,oBAAoB,CAACS,KAAD,CAApB,CAA4BY,aAA5B,CAA0CE,UAA1C,EAAsD,OAAtD,CAAzF;AACD;AACF;AACF;;AACDJ,YAAAA,gBAAgB,IAAI,GAApB;;AACE,gBAAGnB,oBAAoB,CAACS,KAAD,CAApB,IAA+BT,oBAAoB,CAACS,KAAD,CAApB,CAA4BgB,cAA9D,EAA6E;AAC7E,kBAAIH,UAAU,GAAG,IAAjB;AAEAH,cAAAA,gBAAgB,IAAI,GAApB;;AACA,mBAAK,IAAII,UAAT,IAAuBvB,oBAAoB,CAACS,KAAD,CAApB,CAA4BgB,cAAnD,EAAmE;AACjE,oBAAIzB,oBAAoB,CAACS,KAAD,CAApB,CAA4BgB,cAA5B,CAA2CD,cAA3C,CAA0DD,UAA1D,CAAJ,EAA2E;AACzE,sBAAG,CAACD,UAAJ,EAAe;AACbH,oBAAAA,gBAAgB,IAAI,GAApB;AACD,mBAFD,MAEK;AAACG,oBAAAA,UAAU,GAAG,KAAb;AAAoB;;AAC1BH,kBAAAA,gBAAgB,IAAInB,oBAAoB,CAACS,KAAD,CAApB,CAA4BgB,cAA5B,CAA2CF,UAA3C,EAAuD,KAAvD,IAAgE,GAAhE,GAAsEvB,oBAAoB,CAACS,KAAD,CAApB,CAA4BgB,cAA5B,CAA2CF,UAA3C,EAAuD,OAAvD,CAA1F;AACD;AACF;;AACDJ,cAAAA,gBAAgB,IAAI,IAApB;AACD,aAbC,MAaG;AACHA,cAAAA,gBAAgB,IAAI,KAApB;AACD;;AACD,gBAAMO,QAAQ,GAAGT,aAAa,CAAC,eAAD,CAA9B;;AACA,gBAAGS,QAAQ,KAAK,GAAb,IAAoBA,QAAQ,KAAK,QAAjC,IAA6CA,QAAQ,KAAK,OAA7D,EAAsE;AACpEP,cAAAA,gBAAgB,IAAI,KAAKQ,WAAL,CAAiBV,aAAjB,EAAgC,eAAhC,CAApB;AACAE,cAAAA,gBAAgB,IAAI,KAAKQ,WAAL,CAAiBV,aAAjB,EAAgC,aAAhC,CAApB;AACD;;AACD,gBAAGS,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,MAApC,IAA8CA,QAAQ,KAAK,WAA9D,EAA2E;AACzEP,cAAAA,gBAAgB,IAAI,KAAKQ,WAAL,CAAiBV,aAAjB,EAAgC,UAAhC,CAApB;AACAE,cAAAA,gBAAgB,IAAI,KAAKQ,WAAL,CAAiBV,aAAjB,EAAgC,QAAhC,CAApB;AACAE,cAAAA,gBAAgB,IAAI,KAAKQ,WAAL,CAAiBV,aAAjB,EAAgC,KAAhC,CAApB;AACD;;AACD,gBAAGS,QAAQ,KAAK,QAAhB,EAA0B;AACxBP,cAAAA,gBAAgB,IAAI,KAAKQ,WAAL,CAAiBV,aAAjB,EAAgC,UAAhC,CAApB;AACAE,cAAAA,gBAAgB,IAAI,KAAKQ,WAAL,CAAiBV,aAAjB,EAAgC,QAAhC,CAApB;AACAE,cAAAA,gBAAgB,IAAI,KAAKQ,WAAL,CAAiBV,aAAjB,EAAgC,KAAhC,CAApB;AACAE,cAAAA,gBAAgB,IAAI,KAAKQ,WAAL,CAAiBV,aAAjB,EAAgC,UAAhC,CAApB;AACD;;AACDE,YAAAA,gBAAgB,IAAI,GAApB;AACArB,YAAAA,OAAO,CAACC,GAAR,CAAYoB,gBAAZ;AACA,mBAAOA,gBAAP;AACD","sourcesContent":["export class QueryBuilderService {\n\n  buildWithProvidedOrdering(variableOrderLength, variables, variableOrder, values) {\n    for (var i = 0; i < variableOrderLength; i++) {\n      variables[variableOrder[i].id][\"id\"] = variableOrder[i].id;\n      values.push(variables[variableOrder[i].id]);\n    }\n  }\n\n  variableIsValid(value){\n    return value[\"inputName\"] && value[\"inputName\"].startsWith(\"$\")\n  }\n\n  substituteVariable(queryString, matching, replacement){\n    return queryString.split(matching).join(replacement);\n  }\n\n  substituteFinalQuery(finalQuery, controller) {\n    console.log(controller)\n    //Ensure ordered and work upwards\n    //Copy to not affect ordering\n    var orderedVariablesList = controller.target.variables.slice();\n\n    orderedVariablesList.sort((a, b) => (a.indexInUI < b.indexInUI) ? 1 : -1)\n\n    const the_service = this;\n\n    var substitutedFinalQuery = finalQuery;\n    var index = 0;\n    orderedVariablesList.forEach(function (value) {\n      if (value.type === \"variable\") {\n        if (the_service.variableIsValid(value)) {\n          if (value[\"inputValue\"] === undefined) {\n            substitutedFinalQuery = the_service.substituteVariable(substitutedFinalQuery, value[\"inputName\"], \"\");\n          } else {\n            substitutedFinalQuery = the_service.substituteVariable(substitutedFinalQuery, value[\"inputName\"], value[\"inputValue\"]);\n          }\n        }\n      }\n      if (value.type === \"queryVariable\") {\n        substitutedFinalQuery = the_service.substituteVariable(substitutedFinalQuery, value[\"inputValue\"], the_service.buildQueryVariable(orderedVariablesList, value, index, controller));\n      }\n      index +=1;\n    });\n    controller.target.subbedQuery = substitutedFinalQuery;\n    return substitutedFinalQuery;\n  }\n\n  addQueryArg(queryVariable, arg){\n    if(queryVariable[arg]){\n      if(arg === \"num\"){\n        return ', ' + queryVariable[arg]\n      }else{\n        return ', \"' + queryVariable[arg] + '\"'\n      }\n    }else{\n      return ', \"\"'\n    }\n  }\n\n  buildQueryVariable(orderedVariablesList, queryVariable, index, controller) {\n    console.log(queryVariable)\n\n    var constructedQuery = \"\";\n    if(!queryVariable){throw new ReferenceError(\"No query parameters found\")}\n    if(!queryVariable[\"queryFunction\"]){throw new ReferenceError(\"Query function not set\")}\n    if(!queryVariable[\"queryAgg\"]){throw new ReferenceError(\"Query aggregator not set\")}\n    if(!queryVariable[\"metric\"]){throw new ReferenceError(\"Query metric not set\")}\n\n    constructedQuery += queryVariable[\"queryFunction\"] + '(\"';\n    constructedQuery += queryVariable[\"queryAgg\"] + \":\";\n    if(queryVariable[\"downsampleTime\"]){\n      constructedQuery += queryVariable[\"downsampleTime\"];\n      if(queryVariable[\"downsampleAgg\"]){\n        constructedQuery += \"-\" + queryVariable[\"downsampleAgg\"]\n      }\n      if(queryVariable[\"fillPolicy\"]){\n        constructedQuery += \"-\" + queryVariable[\"fillPolicy\"]\n      }\n    }else{\n      if(queryVariable[\"downsampleAgg\"]){\n        constructedQuery += queryVariable[\"downsampleAgg\"]\n      }\n      if(queryVariable[\"fillPolicy\"]){\n        constructedQuery += \"-\" + queryVariable[\"fillPolicy\"]\n      }\n    }\n    if(queryVariable[\"conversionFlag\"]){\n      constructedQuery += \":\" + queryVariable[\"conversionFlag\"]\n    }\n    if(queryVariable[\"flags\"]){\n      constructedQuery += \":\" + queryVariable[\"flags\"]\n    }\n    if(queryVariable[\"downsampleTime\"] || queryVariable[\"downsampleAgg\"] || queryVariable[\"fillPolicy\"]){\n      constructedQuery += \":\"\n    }\n    constructedQuery += queryVariable[\"metric\"] + \"{\";\n    if(orderedVariablesList[index] && orderedVariablesList[index].grouptagBoxes) {\n      var onFirstTag = true;\n      for (var tagMapping in orderedVariablesList[index].grouptagBoxes) {\n        if (orderedVariablesList[index].grouptagBoxes.hasOwnProperty(tagMapping)) {\n          if (!onFirstTag) {\n            constructedQuery += \",\"\n          } else {\n            onFirstTag = false;\n          }\n          constructedQuery += orderedVariablesList[index].grouptagBoxes[tagMapping][\"key\"] + \"=\" + orderedVariablesList[index].grouptagBoxes[tagMapping][\"value\"]\n        }\n      }\n    }\n    constructedQuery += \"}\";\n      if(orderedVariablesList[index] && orderedVariablesList[index].filtertagBoxes){\n      var onFirstTag = true;\n\n      constructedQuery += \"{\";\n      for (var tagMapping in orderedVariablesList[index].filtertagBoxes) {\n        if (orderedVariablesList[index].filtertagBoxes.hasOwnProperty(tagMapping)) {\n          if(!onFirstTag){\n            constructedQuery += \",\"\n          }else{onFirstTag = false;}\n          constructedQuery += orderedVariablesList[index].filtertagBoxes[tagMapping][\"key\"] + \"=\" + orderedVariablesList[index].filtertagBoxes[tagMapping][\"value\"]\n        }\n      }\n      constructedQuery += '}\"'\n    }else{\n      constructedQuery += '{}\"'\n    }\n    const queryVar = queryVariable[\"queryFunction\"]\n    if(queryVar === \"q\" || queryVar === \"change\" || queryVar === \"count\") {\n      constructedQuery += this.addQueryArg(queryVariable, \"startDuration\");\n      constructedQuery += this.addQueryArg(queryVariable, \"endDuration\");\n    }\n    if(queryVar === \"band\" || queryVar === \"over\" || queryVar === \"shiftBand\") {\n      constructedQuery += this.addQueryArg(queryVariable, \"duration\");\n      constructedQuery += this.addQueryArg(queryVariable, \"period\");\n      constructedQuery += this.addQueryArg(queryVariable, \"num\");\n    }\n    if(queryVar === \"window\") {\n      constructedQuery += this.addQueryArg(queryVariable, \"duration\");\n      constructedQuery += this.addQueryArg(queryVariable, \"period\");\n      constructedQuery += this.addQueryArg(queryVariable, \"num\");\n      constructedQuery += this.addQueryArg(queryVariable, \"funcName\");\n    }\n    constructedQuery += \")\";\n    console.log(constructedQuery);\n    return constructedQuery;\n  }\n}\n"],"file":"queryBuilderService.js"}