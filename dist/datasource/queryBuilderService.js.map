{"version":3,"sources":["../../src/datasource/queryBuilderService.js"],"names":["QueryBuilderService","variableOrderLength","variables","variableOrder","values","i","id","push","hasOwnProperty","value","startsWith","queryString","matching","replacement","split","join","finalQuery","controller","console","log","orderedVariablesList","target","length","buildWithProvidedOrdering","buildWithDefaultOrdering","sort","reverse","the_service","substitutedFinalQuery","forEach","type","variableIsValid","undefined","substituteVariable","buildQueryVariable","subbedQuery","constructedQuery","queryFunction","queryVariable","arg","ReferenceError","filtertagBoxes","onFirstTag","tagMapping","queryArgs","addQueryArg"],"mappings":"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","sourcesContent":["export class QueryBuilderService {\n\n  buildWithProvidedOrdering(variableOrderLength, variables, variableOrder, values) {\n    for (var i = 0; i < variableOrderLength; i++) {\n      variables[variableOrder[i].id][\"id\"] = variableOrder[i].id;\n      values.push(variables[variableOrder[i].id]);\n    }\n  }\n\n  buildWithDefaultOrdering(variables, values){\n    for (var id in variables) {\n      if (variables.hasOwnProperty(id)) {\n        variables[id][\"id\"] = id;\n        values.push(variables[id]);\n      }\n    }\n  }\n\n  variableIsValid(value){\n    return value[\"inputName\"] && value[\"inputName\"].startsWith(\"$\")\n  }\n\n  substituteVariable(queryString, matching, replacement){\n    return queryString.split(matching).join(replacement);\n  }\n\n  substituteFinalQuery(finalQuery, controller) {\n    console.log(controller)\n    //Dictionary doesn't guarantee ordering, so convert to array and sort by key\n    var orderedVariablesList = [];\n    const variables = controller.target.variables;\n    const variableOrder = controller.target.variableOrder;\n    const variableOrderLength = variableOrder.length;\n    if (variableOrderLength) {\n      this.buildWithProvidedOrdering(variableOrderLength, variables, variableOrder, orderedVariablesList);\n    } else {\n      this.buildWithDefaultOrdering(variables, orderedVariablesList);\n    }\n    orderedVariablesList.sort();\n    //Work upwards\n    orderedVariablesList = orderedVariablesList.reverse();\n\n    var the_service = this;\n\n    var substitutedFinalQuery = finalQuery;\n    orderedVariablesList.forEach(function (value) {\n      if (value.type === \"variable\") {\n        if (the_service.variableIsValid(value)) {\n          if (value[\"inputValue\"] === undefined) {\n            substitutedFinalQuery = the_service.substituteVariable(substitutedFinalQuery, value[\"inputName\"], \"\");\n          } else {\n            substitutedFinalQuery = the_service.substituteVariable(substitutedFinalQuery, value[\"inputName\"], value[\"inputValue\"]);\n          }\n        }\n      }\n      if (value.type === \"queryVariable\") {\n        substitutedFinalQuery = the_service.substituteVariable(substitutedFinalQuery, value[\"inputValue\"], the_service.buildQueryVariable(value, value.id, controller));\n      }\n    });\n    controller.target.subbedQuery = substitutedFinalQuery;\n    return substitutedFinalQuery;\n  }\n\n  addQueryArg(constructedQuery, queryFunction, queryVariable, arg){\n    if(queryFunction === \"q\" || queryFunction === \"change\" || queryFunction === \"count\"){\n      if(arg !== \"startDuration\" && arg !== \"endDuration\"){\n        return constructedQuery;\n      }\n    }\n    if(queryFunction === \"band\" || queryFunction === \"over\" || queryFunction === \"shiftBand\"){\n      if(arg !== \"duration\" && arg !== \"period\" && arg !== \"num\"){\n        return constructedQuery;\n      }\n    }\n    if(queryFunction === \"window\"){\n      if(arg !== \"duration\" && arg !== \"period\" && arg !== \"num\" && arg !== \"funcName\"){\n        return constructedQuery;\n      }\n    }\n\n    if(queryVariable[arg]){\n      if(arg === \"num\"){\n        constructedQuery += ', ' + queryVariable[arg]\n      }else{\n        constructedQuery += ', \"' + queryVariable[arg] + '\"'\n      }\n    }\n    return constructedQuery\n  }\n\n  buildQueryVariable(queryVariable, id, controller) {\n    console.log(queryVariable)\n\n    var constructedQuery = \"\";\n    if(!queryVariable){throw new ReferenceError(\"No query parameters found\")}\n    if(!queryVariable[\"queryFunction\"]){throw new ReferenceError(\"Query function not set\")}\n    if(!queryVariable[\"queryAgg\"]){throw new ReferenceError(\"Query aggregator not set\")}\n    if(!queryVariable[\"metric\"]){throw new ReferenceError(\"Query metric not set\")}\n\n    constructedQuery += queryVariable[\"queryFunction\"] + '(\"';\n    constructedQuery += queryVariable[\"queryAgg\"] + \":\";\n    if(queryVariable[\"downsampleTime\"]){\n      constructedQuery += queryVariable[\"downsampleTime\"];\n      if(queryVariable[\"downsampleAgg\"]){\n        constructedQuery += \"-\" + queryVariable[\"downsampleAgg\"]\n      }\n      if(queryVariable[\"fillPolicy\"]){\n        constructedQuery += \"-\" + queryVariable[\"fillPolicy\"]\n      }\n    }else{\n      if(queryVariable[\"downsampleAgg\"]){\n        constructedQuery += queryVariable[\"downsampleAgg\"]\n      }\n      if(queryVariable[\"fillPolicy\"]){\n        constructedQuery += \"-\" + queryVariable[\"fillPolicy\"]\n      }\n    }\n    if(queryVariable[\"conversionFlag\"]){\n      constructedQuery += \":\" + queryVariable[\"conversionFlag\"]\n    }\n    if(queryVariable[\"flags\"]){\n      constructedQuery += \":\" + queryVariable[\"flags\"]\n    }\n    if(queryVariable[\"downsampleTime\"] || queryVariable[\"downsampleAgg\"] || queryVariable[\"fillPolicy\"]){\n      constructedQuery += \":\"\n    }\n    constructedQuery += queryVariable[\"metric\"] + \"{\";\n    console.log(constructedQuery)\n    if(queryVariable[\"metricTags\"]){\n      constructedQuery += queryVariable[\"metricTags\"]\n    }\n    constructedQuery += \"}\";\n    if(controller.target.filtertagBoxes[id]){\n      var onFirstTag = true;\n\n      constructedQuery += \"{\";\n      for (var tagMapping in controller.target.filtertagBoxes[id]) {\n        if (controller.target.filtertagBoxes[id].hasOwnProperty(tagMapping)) {\n          if(!onFirstTag){\n            constructedQuery += \", \"\n          }else{onFirstTag = false;}\n          constructedQuery += controller.target.filtertagBoxes[id][tagMapping][\"key\"] + \"=\" + controller.target.filtertagBoxes[id][tagMapping][\"value\"]\n        }\n      }\n      constructedQuery += '}\"'\n    }else{\n      constructedQuery += '{}\"'\n    }\n    var the_service = this;\n    var queryArgs = [\"startDuration\", \"endDuration\", \"duration\", \"period\", \"funcName\", \"num\"];\n    queryArgs.forEach(function (arg) {\n      constructedQuery = the_service.addQueryArg(constructedQuery, queryVariable[\"queryFunction\"], queryVariable, arg);\n    });\n    constructedQuery += \")\";\n    console.log(constructedQuery);\n    return constructedQuery;\n  }\n}\n"],"file":"queryBuilderService.js"}