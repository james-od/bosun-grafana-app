{"version":3,"sources":["../../src/datasource/queryBuilderService.js"],"names":["QueryBuilderService","finalQuery","_this","values","Array","target","variableOrder","length","i","variables","id","push","hasOwnProperty","sort","reverse","the_service","substitutedFinalQuery","forEach","value","type","startsWith","undefined","split","join","buildQueryVariable","subbedQuery","constructedQuery","queryVariable","arg","ReferenceError","tagBoxes","onFirstTag","tagMapping","queryArgs","addQueryArg","console","log"],"mappings":"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","sourcesContent":["export class QueryBuilderService {\n\n  constructor() {\n  }\n\n  substituteFinalQuery(finalQuery, _this) {\n    //Dictionary doesn't guarantee ordering, so convert to array and sort by key\n    var values = new Array();\n    if (_this.target.variableOrder.length) {\n      for (var i = 0; i < _this.target.variableOrder.length; i++) {\n        _this.target.variables[_this.target.variableOrder[i].id][\"id\"] = _this.target.variableOrder[i].id\n        values.push(_this.target.variables[_this.target.variableOrder[i].id])\n      }\n    } else {\n      for (var id in _this.target.variables) {\n        if (_this.target.variables.hasOwnProperty(id)) {\n          _this.target.variables[id][\"id\"] = id\n          values.push(_this.target.variables[id])\n        }\n      }\n    }\n    values.sort()\n    //Work upwards\n    values = values.reverse()\n\n    var the_service = this\n\n    var substitutedFinalQuery = finalQuery\n    values.forEach(function (value) {\n      if (value.type == \"variable\") {\n\n        if (value[\"inputName\"] && value[\"inputName\"].startsWith(\"$\")) {\n          if (value[\"inputValue\"] == undefined) {\n            substitutedFinalQuery = substitutedFinalQuery.split(value[\"inputName\"]).join(\"\");\n          } else {\n            substitutedFinalQuery = substitutedFinalQuery.split(value[\"inputName\"]).join(value[\"inputValue\"]);\n          }\n        }\n      }\n      if (value.type == \"queryVariable\") {\n        substitutedFinalQuery = substitutedFinalQuery.split(value[\"inputValue\"]).join(the_service.buildQueryVariable(value, value.id, _this));\n      }\n    });\n    _this.target.subbedQuery = substitutedFinalQuery;\n    return substitutedFinalQuery;\n  }\n\n  addQueryArg(constructedQuery, queryVariable, arg){\n    if(queryVariable[arg]){\n      if(arg == \"num\"){\n        constructedQuery += ', ' + queryVariable[arg]\n      }else{\n        constructedQuery += ', \"' + queryVariable[arg] + '\"'\n      }\n    }\n    return constructedQuery\n  }\n\n  buildQueryVariable(queryVariable, id, _this) {\n\n    var constructedQuery = \"\";\n    if(!queryVariable){\n      throw new ReferenceError(\"No query parameters found\")\n    }\n    if(queryVariable[\"queryFunction\"]){\n      constructedQuery += queryVariable[\"queryFunction\"] + '(\"'\n    }else{\n      throw new ReferenceError(\"Query function not set\")\n    }\n    if(queryVariable[\"queryAgg\"]){\n      constructedQuery += queryVariable[\"queryAgg\"] + \":\"\n    }else{\n      throw new ReferenceError(\"Query aggregator not set\")\n    }\n    if(queryVariable[\"downsampleTime\"]){\n      constructedQuery += queryVariable[\"downsampleTime\"];\n      if(queryVariable[\"downsampleAgg\"]){\n        constructedQuery += \"-\" + queryVariable[\"downsampleAgg\"]\n      }\n      if(queryVariable[\"fillPolicy\"]){\n        constructedQuery += \"-\" + queryVariable[\"fillPolicy\"]\n      }\n    }\n    if(queryVariable[\"conversionFlag\"]){\n      constructedQuery += \":\" + queryVariable[\"conversionFlag\"]\n    }\n    if(queryVariable[\"metric\"]){\n      constructedQuery += \":\" + queryVariable[\"metric\"] + \"{\"\n    }else{\n      throw new ReferenceError(\"Query metric not set\")\n    }\n    if(queryVariable[\"metricTags\"]){\n      constructedQuery += queryVariable[\"metricTags\"]\n    }\n    constructedQuery += \"}\";\n    if(_this.target.tagBoxes[id]){\n      var onFirstTag = true;\n\n      constructedQuery += \"{\";\n      for (var tagMapping in _this.target.tagBoxes[id]) {\n        if (_this.target.tagBoxes[id].hasOwnProperty(tagMapping)) {\n          if(!onFirstTag){\n            constructedQuery += \", \"\n          }else{onFirstTag = false;}\n          constructedQuery += _this.target.tagBoxes[id][tagMapping][\"key\"] + \"=\" + _this.target.tagBoxes[id][tagMapping][\"value\"]\n        }\n      }\n      constructedQuery += '}\"'\n    }else{\n      constructedQuery += '{}\"'\n    }\n    var the_service = this;\n    var queryArgs = [\"startDuration\", \"endDuration\", \"duration\", \"period\", \"funcName\", \"num\"]\n    queryArgs.forEach(function (arg) {\n      constructedQuery = the_service.addQueryArg(constructedQuery, queryVariable, arg);\n    });\n    constructedQuery += \")\";\n    console.log(constructedQuery);\n    return constructedQuery;\n  }\n}\n"],"file":"queryBuilderService.js"}