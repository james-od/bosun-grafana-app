{"version":3,"sources":["../../src/datasource/queryBuilderService.js"],"names":["QueryBuilderService","finalQuery","_this","values","Array","scope","variableOrder","length","i","target","variables","id","push","hasOwnProperty","sort","reverse","the_service","substitutedFinalQuery","forEach","value","type","startsWith","undefined","split","join","buildQueryVariable","subbedQuery","queryVariable","console","log","constructedQuery","ReferenceError","tagBoxes","onFirstTag","tagMapping"],"mappings":"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","sourcesContent":["export class QueryBuilderService {\n\n  constructor() {\n  }\n\n  substituteFinalQuery(finalQuery, _this) {\n    //Dictionary doesn't guarantee ordering, so convert to array and sort by key\n    var values = new Array();\n    if (_this.scope.variableOrder.length) {\n      for (var i = 0; i < _this.scope.variableOrder.length; i++) {\n        _this.target.variables[_this.scope.variableOrder[i].id][\"id\"] = _this.scope.variableOrder[i].id\n        values.push(_this.target.variables[_this.scope.variableOrder[i].id])\n      }\n    } else {\n      for (var id in _this.target.variables) {\n        if (_this.target.variables.hasOwnProperty(id)) {\n          _this.target.variables[id][\"id\"] = id\n          values.push(_this.target.variables[id])\n        }\n      }\n    }\n    values.sort()\n    //Work upwards\n    values = values.reverse()\n\n    var the_service = this\n\n    var substitutedFinalQuery = finalQuery\n    values.forEach(function (value) {\n      if (value.type == \"variable\") {\n\n        if (value[\"inputName\"] && value[\"inputName\"].startsWith(\"$\")) {\n          if (value[\"inputValue\"] == undefined) {\n            substitutedFinalQuery = substitutedFinalQuery.split(value[\"inputName\"]).join(\"\");\n          } else {\n            substitutedFinalQuery = substitutedFinalQuery.split(value[\"inputName\"]).join(value[\"inputValue\"]);\n          }\n        }\n      }\n      if (value.type == \"queryVariable\") {\n        substitutedFinalQuery = substitutedFinalQuery.split(value[\"inputValue\"]).join(the_service.buildQueryVariable(value, value.id, _this));\n      }\n    });\n    _this.scope.subbedQuery = substitutedFinalQuery;\n    return substitutedFinalQuery;\n  }\n\n  buildQueryVariable(queryVariable, id, _this) {\n\n    console.log(queryVariable)\n    console.log(id)\n    console.log(_this.scope)\n    var constructedQuery = \"\";\n    if(!queryVariable){\n      throw new ReferenceError(\"No query parameters found\")\n    }\n    if(queryVariable[\"queryFunction\"]){\n      constructedQuery += queryVariable[\"queryFunction\"] + '(\"'\n    }else{\n      throw new ReferenceError(\"Query function not set\")\n    }\n    if(queryVariable[\"queryAgg\"]){\n      constructedQuery += queryVariable[\"queryAgg\"] + \":\"\n    }else{\n      throw new ReferenceError(\"Query aggregator not set\")\n    }\n    if(queryVariable[\"downsampleTime\"]){\n      constructedQuery += queryVariable[\"downsampleTime\"]\n      if(queryVariable[\"downsampleAgg\"]){\n        constructedQuery += \"-\" + queryVariable[\"downsampleAgg\"]\n      }\n      if(queryVariable[\"fillPolicy\"]){\n        constructedQuery += \"-\" + queryVariable[\"fillPolicy\"]\n      }\n    }\n    if(queryVariable[\"conversionFlag\"]){\n      constructedQuery += \":\" + queryVariable[\"conversionFlag\"]\n    }\n    if(queryVariable[\"metric\"]){\n      constructedQuery += \":\" + queryVariable[\"metric\"] + \"{\"\n    }else{\n      throw new ReferenceError(\"Query metric not set\")\n    }\n    if(queryVariable[\"metricTags\"]){\n      constructedQuery += queryVariable[\"metricTags\"]\n    }\n    constructedQuery += \"}\"\n    if(_this.target.tagBoxes[id]){\n      var onFirstTag = true\n\n      constructedQuery += \"{\"\n      for (var tagMapping in _this.target.tagBoxes[id]) {\n        if (_this.target.tagBoxes[id].hasOwnProperty(tagMapping)) {\n          if(!onFirstTag){\n            constructedQuery += \", \"\n          }else{onFirstTag = false;}\n          constructedQuery += _this.target.tagBoxes[id][tagMapping][\"key\"] + \"=\" + _this.target.tagBoxes[id][tagMapping][\"value\"]\n        }\n      }\n      constructedQuery += '}\"'\n    }else{\n      constructedQuery += '{}\"'\n    }\n    if(queryVariable[\"startDuration\"]){\n      constructedQuery += ', \"' + queryVariable[\"startDuration\"] + '\"'\n    }\n    if(queryVariable[\"endDuration\"]){\n      constructedQuery += ', \"' + queryVariable[\"endDuration\"] + '\"'\n    }\n    if(queryVariable[\"duration\"]){\n      constructedQuery += ', \"' + queryVariable[\"duration\"] + '\"'\n    }\n    if(queryVariable[\"period\"]){\n      constructedQuery += ', \"' + queryVariable[\"period\"] + '\"'\n    }\n    if(queryVariable[\"num\"]){\n      constructedQuery += ', ' + queryVariable[\"num\"]\n    }\n    if(queryVariable[\"funcName\"]){\n      constructedQuery += ', \"' + queryVariable[\"funcName\"] + '\"'\n    }\n    constructedQuery += \")\";\n    console.log(constructedQuery)\n    return constructedQuery;\n  }\n}\n"],"file":"queryBuilderService.js"}